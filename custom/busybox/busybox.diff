diff --git a/Android.mk b/Android.mk
index c8cb674..51e1a00 100644
--- a/Android.mk
+++ b/Android.mk
@@ -3,7 +3,7 @@ LOCAL_PATH := $(call my-dir)
 # Make a static library for clearsilver's regex. This prevents multiple
 # symbol definition error.
 include $(CLEAR_VARS)
-LOCAL_SRC_FILES := ../clearsilver/util/regex/regex.c
+LOCAL_SRC_FILES := clearsilver/util/regex/regex.c
 LOCAL_MODULE := libclearsilverregex
 LOCAL_C_INCLUDES := \
 	external/clearsilver \
@@ -12,21 +12,19 @@ include $(BUILD_STATIC_LIBRARY)
 
 
 SUBMAKE := make -s -C $(LOCAL_PATH) CC=$(CC)
-KERNEL_MODULES_DIR?=/system/modules/lib/modules
+KERNEL_MODULES_DIR?=/system/lib/modules
 
 BUSYBOX_SRC_FILES = $(shell cat $(LOCAL_PATH)/busybox-$(BUSYBOX_CONFIG).sources) \
 	libbb/android.c
 
-ifeq ($(strip $(CYANOGEN_BIONIC)),true)
-    ifeq ($(TARGET_ARCH),arm)
-      BUSYBOX_SRC_FILES += \
-        android/libc/arch-arm/syscalls/adjtimex.S \
-        android/libc/arch-arm/syscalls/getsid.S \
-        android/libc/arch-arm/syscalls/stime.S \
-        android/libc/arch-arm/syscalls/swapon.S \
-        android/libc/arch-arm/syscalls/swapoff.S \
-        android/libc/arch-arm/syscalls/sysinfo.S
-    endif
+ifeq ($(TARGET_ARCH),arm)
+        BUSYBOX_SRC_FILES += \
+		android/libc/arch-arm/syscalls/adjtimex.S \
+		android/libc/arch-arm/syscalls/getsid.S \
+		android/libc/arch-arm/syscalls/stime.S \
+		android/libc/arch-arm/syscalls/swapon.S \
+		android/libc/arch-arm/syscalls/swapoff.S \
+		android/libc/arch-arm/syscalls/sysinfo.S
 endif
 
 BUSYBOX_C_INCLUDES = \
@@ -46,17 +44,32 @@ BUSYBOX_CFLAGS = \
 	-D'CONFIG_DEFAULT_MODULES_DIR="$(KERNEL_MODULES_DIR)"' \
 	-D'BB_VER="$(strip $(shell $(SUBMAKE) kernelversion))$(BUSYBOX_CONFIG)"' -DBB_BT=AUTOCONF_TIMESTAMP
 
+BUSYBOX_CFLAGS += \
+  -Dgetusershell=busybox_getusershell \
+  -Dsetusershell=busybox_setusershell \
+  -Dendusershell=busybox_endusershell \
+  -Dttyname_r=busybox_ttyname_r \
+  -Dgetmntent=busybox_getmntent \
+  -Dgetmntent_r=busybox_getmntent_r
+
 
 include $(CLEAR_VARS)
-BUSYBOX_CONFIG:=full
+BUSYBOX_CONFIG:=minimal
 LOCAL_SRC_FILES := $(BUSYBOX_SRC_FILES)
 LOCAL_C_INCLUDES := $(BUSYBOX_C_INCLUDES)
 LOCAL_CFLAGS := $(BUSYBOX_CFLAGS)
 LOCAL_MODULE := busybox
+LOCAL_MODULE_TAGS := debug
 LOCAL_MODULE_PATH := $(TARGET_OUT_OPTIONAL_EXECUTABLES)
-LOCAL_STATIC_LIBRARIES += libclearsilverregex
+LOCAL_FORCE_STATIC_EXECUTABLE := true
+LOCAL_STATIC_LIBRARIES += libclearsilverregex libcutils libc libm 
 include $(BUILD_EXECUTABLE)
 
+
+#
+# Build Links
+#
+
 BUSYBOX_LINKS := $(shell cat $(LOCAL_PATH)/busybox-$(BUSYBOX_CONFIG).links)
 # nc is provided by external/netcat
 exclude := nc
@@ -76,7 +89,10 @@ ALL_MODULES.$(LOCAL_MODULE).INSTALLED := \
     $(ALL_MODULES.$(LOCAL_MODULE).INSTALLED) $(SYMLINKS)
 
 
+#
+# Busybox Lib
 # Build a static busybox for the recovery image
+#
 include $(CLEAR_VARS)
 BUSYBOX_CONFIG:=minimal
 LOCAL_SRC_FILES := $(BUSYBOX_SRC_FILES)
diff --git a/coreutils/dd.c b/coreutils/dd.c
index f1e63fd..54519a7 100644
--- a/coreutils/dd.c
+++ b/coreutils/dd.c
@@ -116,6 +116,8 @@ static bool write_and_stats(const void *buf, size_t len, size_t obs,
 int dd_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int dd_main(int argc UNUSED_PARAM, char **argv)
 {
+	printf("%s %s %s\n", argv[0], argv[1], argv[2]);
+
 	enum {
 		/* Must be in the same order as OP_conv_XXX! */
 		/* (see "flags |= (1 << what)" below) */
@@ -201,6 +203,7 @@ int dd_main(int argc UNUSED_PARAM, char **argv)
 		 * more than one of them. We wouldn't. */
 		if (arg[0] == '-' && arg[1] == '-' && arg[2] == '\0')
 			continue;
+		
 #endif
 		val = strchr(arg, '=');
 		if (val == NULL)
